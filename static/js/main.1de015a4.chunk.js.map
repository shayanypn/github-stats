{"version":3,"sources":["serviceWorker.ts","Components/Form.tsx","Components/RepoTable.tsx","Pages/Home.tsx","Pages/Stat.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","root","padding","display","alignItems","width","input","flex","iconButton","divider","height","margin","Form","onSubmit","onClear","classes","useState","query","setQuery","searched","setSearched","Paper","component","className","event","preventDefault","IconButton","aria-label","InputBase","autoFocus","placeholder","inputProps","value","onChange","target","type","Divider","orientation","onClick","theme","author","authorAvatar","backgroundColor","color","authorInfo","paddingLeft","flexDirection","StyledTableCell","withStyles","head","palette","common","black","white","body","fontSize","minHeight","TableCell","RepoTableHead","TableHead","TableRow","align","RepoTable","data","TableContainer","Table","TableBody","items","map","row","key","id","scope","Avatar","alt","owner","login","src","avatar_url","name","description","to","full_name","flexGrow","paddingTop","paddingBottom","title","textAlign","marginBottom","form","marginLeft","spacing","Home","React","incomplete_results","total_count","repositories","setRepositories","Container","maxWidth","Grid","container","justify","fetch","then","res","json","result","error","style","length","card","media","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","red","menuButton","marginRight","formControl","minWidth","selectEmpty","marginTop","validExt","nameFilter","Object","keys","find","x","indexOf","Stat","history","releases","setReleases","user","repo","version","chartData","setChartData","prepareAsset","release","item","prepareChartData","assets","params","filter","ext","download_count","useEffect","fetchReleases","Card","CardHeader","action","push","FormControl","Select","labelId","MenuItem","subheader","CardContent","chartType","loader","options","chartArea","hAxis","minValue","vAxis","legendToggle","createMuiTheme","overrides","MuiCssBaseline","html","App","ThemeProvider","CssBaseline","exact","path","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1de015a4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Divider from '@material-ui/core/Divider';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n    },\n    input: {\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\ninterface IProps {\n  onSubmit: any,\n  onClear: any\n}\n\nconst Form: React.FC<IProps> = ({ onSubmit, onClear }) => {\n  const classes = useStyles();\n  const [query, setQuery] = useState('');\n  const [searched, setSearched] = useState(false);\n  const handleSubmit:any = (event:React.MouseEvent<HTMLElement>) => {\n    onSubmit(query);\n    setSearched(true);\n    event.preventDefault();\n  }\n  const handleClear:any = (event:React.MouseEvent<HTMLElement>) => {\n    setQuery('');\n    setSearched(false);\n    onClear();\n  }\n\n  return (\n    <Paper\n      component=\"form\"\n      className={classes.root}\n      onSubmit={handleSubmit}\n    >\n      <IconButton className={classes.iconButton} aria-label=\"GitHub\">\n        <GitHubIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        autoFocus\n        placeholder=\"Search in GitHub repositories\"\n        inputProps={{ 'aria-label': 'Search in GitHub repositories' }}\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n      >\n        <SearchIcon />\n      </IconButton>\n      {\n        searched \n        && (\n          <>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n            <IconButton\n              type=\"button\"\n              className={classes.iconButton}\n              aria-label=\"close\"\n              onClick={handleClear}\n            >\n              <CloseIcon />\n            </IconButton>\n          </>\n        )\n      }\n    </Paper>\n  );\n}\n\nexport default Form;","import React from 'react';\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\n// import Icon from '@material-ui/core/Icon';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport { \n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Avatar,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    author: {\n      display: 'flex',\n    },\n    authorAvatar: {\n      backgroundColor: '#dedede',\n      color: '#fff'\n    },\n    authorInfo: {\n      paddingLeft: 10,\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }),\n);\n\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white,\n      padding: '8px'\n    },\n    body: {\n      fontSize: 14,\n      padding: '4px 8px',\n      minHeight: '60px',\n    },\n  }),\n)(TableCell);\n\n\ninterface IProps {\n  data: any\n}\n\n\nconst RepoTableHead: React.FC = () => (\n  <TableHead>\n    <TableRow>\n      <StyledTableCell>Name</StyledTableCell>\n      <StyledTableCell align=\"left\"></StyledTableCell>\n    </TableRow>\n  </TableHead>\n);\n\nconst RepoTable: React.FC<IProps> = ({ data }) => {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <RepoTableHead />\n        <TableBody>\n          {data.items.map((row:any) => (\n            <TableRow key={row.id}>\n              <StyledTableCell component=\"td\" scope=\"row\">\n                <div className={classes.author}>\n                  <Avatar className={classes.authorAvatar} alt={row.owner.login} src={row.owner.avatar_url} />\n                  <div className={classes.authorInfo}>\n                    <strong>{row.owner.login} / {row.name}</strong>\n                    <small>{row.description}</small>\n                  </div>\n                </div>\n              </StyledTableCell>\n              <StyledTableCell component=\"td\" align=\"left\">\n                <Link to={`/stat/${row.full_name}`} >\n                  <IconButton color=\"primary\" aria-label=\"view stats\" component=\"span\">\n                    <AssessmentIcon />\n                  </IconButton>\n                </Link>\n              </StyledTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default RepoTable;","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Container, Grid } from '@material-ui/core';\nimport Form from '../Components/Form';\nimport RepoTable from '../Components/RepoTable';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      paddingTop: 40,\n      paddingBottom: 40,\n      backgroundColor: '#efefef'\n    },\n    title: {\n      display: 'block',\n      width: '100%',\n      textAlign: 'center',\n      marginBottom: 0\n    },\n    form: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  }),\n);\n\nfunction Home() {\n  const classes = useStyles();\n  const [repositories, setRepositories] = React.useState({\n    incomplete_results: false,\n    items: [],\n    total_count: 0\n  });\n\n  const handleSearch = (query:string) => {\n\n    fetch(`https://api.github.com/search/repositories?q=${query}`)\n      .then(res => res.json())\n      .then((result) => {\n          setRepositories(result);\n        },\n        (error) => {\n        }\n      )\n  };\n\n  const handleClear = () => {\n    setRepositories({\n      incomplete_results: false,\n      items: [],\n      total_count: 0\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"md\">\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <h1 className={classes.title}>GitHub Stat</h1>\n          <p>\n            GitHub Stat is tool that let you visualize your repositories statatistics.\n          </p>\n        </Grid>\n        <Grid container>\n          <Form\n            onSubmit={handleSearch}\n            onClear={handleClear}\n          />\n        </Grid>\n        <Grid container style={{ paddingTop: 20 }}>\n          {\n            repositories.items.length\n            ? (<RepoTable data={repositories} />)\n            : 'No item found!'\n          }\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport {\n  Container,\n  Grid,\n  Card,\n  MenuItem,\n  FormControl,\n  Select\n} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Chart from \"react-google-charts\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      paddingTop: 40,\n      paddingBottom: 40,\n      backgroundColor: '#efefef'\n    },\n    card: {\n      width: '100%',\n      backgroundColor: '#fff'\n    },\n    title: {\n      display: 'block',\n      width: '100%',\n      textAlign: 'center',\n      marginBottom: 0\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IProps {\n  match: any\n  history: any\n}\n\nconst validExt = {'.AppImage': 'Linux', '.exe': 'Windows', '.dmg': 'Mac'};\nconst nameFilter = (name:string) => (Object.keys(validExt).find(x => name.indexOf(x) !== -1) || '');\n\nconst Stat: React.FC<IProps> = ({ match, history }) => {\n  const classes = useStyles();\n  const [releases, setReleases] = React.useState([]);\n  const [chartData, setChartData] = React.useState({\n    user: '',\n    repo: '',\n    avatar: '',\n    version: 0,\n    data: [[]]\n  });\n\n\n  const handleBack = () => history.push('/');\n\n  const handleVersionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    prepareAsset(event.target.value as number);\n  };\n\n  const prepareAsset = (id:number) => {\n    const release:any = releases.find((item:any) => item.id === id);\n\n    if (release) {\n      prepareChartData(id, release.author.avatar_url, release.assets);\n    }\n  }\n\n  const prepareChartData = (id:number, avatar:string, assets:any) => {\n    const { user, repo } = match.params;\n\n    const data = assets\n      .filter((item:any) => (item.name.indexOf('.exe.blockmap') === -1 && nameFilter(item.name)))\n      .map((item:any) => ({...item, ext: nameFilter(item.name)}))\n      .map((item:any) => ([item.ext, item.download_count]));\n\n    setChartData({\n      user: user,\n      repo: repo,\n      avatar: avatar,\n      version: id,\n      data: [\n        ['OS', 'Download'],\n        ...data\n      ]\n    });\n  }\n\n\n  const fetchReleases = (user:string, repo: string) => {\n    fetch(`https://api.github.com/repos/${user}/${repo}/releases`)\n      .then(res => res.json())\n      .then((result) => {\n          setReleases(result);\n        },\n        (error) => {\n        }\n      )\n  };\n\n  React.useEffect(()=> {\n    const { user, repo } = match.params;\n\n    if (user && repo )\n      fetchReleases(user, repo);\n  }, [match.params.user, match.params.repo]);\n\n  React.useEffect(()=> {\n    if (releases && releases.length){\n      const release:any = releases[0];\n      prepareAsset(release.id);\n    }\n  }, [releases.length]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container justify=\"center\" alignItems=\"center\">\n        <h1 className={classes.title}>GitHub Stat</h1>\n        <p>\n          GitHub Stat is tool that let you visualize your repositories statatistics.\n        </p>\n      </Grid>\n      <Grid container style={{ paddingTop: 20 }}>\n        <Card className={classes.card}>\n          <CardHeader\n            avatar={\n              <Avatar\n                aria-label=\"recipe\"\n                className={classes.avatar}\n                src={chartData.avatar}\n              >\n                R\n              </Avatar>\n            }\n            action={\n              <>\n              <IconButton aria-label=\"back\" onClick={() => handleBack()}>\n                <ArrowBackIcon />\n              </IconButton>\n              <FormControl className={classes.formControl}>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={chartData.version}\n                  onChange={handleVersionChange}\n                >\n                  {releases.map((item:any)=> (<MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>))}\n                </Select>\n              </FormControl>\n              </>\n            }\n            title={chartData.user}\n            subheader={chartData.repo}\n          />\n          <CardContent>\n              <Chart\n                width=\"100%\"\n                height={300}\n                chartType=\"ColumnChart\"\n                loader={<div>Loading Chart</div>}\n                data={chartData.data}\n                options={{\n                  title: ' ',\n                  chartArea: { width: '100%' },\n                  hAxis: {\n                    title: '',\n                    minValue: 0,\n                  },\n                  vAxis: {\n                    title: ' ',\n                  },\n                }}\n                legendToggle\n              />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Stat;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Pages/Home';\nimport Stat from './Pages/Stat';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        html: {\n          backgroundColor: '#efefef',\n        },\n      },\n    },\n  },\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/stat/:user/:repo\" component={Stat} />\n            </Switch>\n          </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}